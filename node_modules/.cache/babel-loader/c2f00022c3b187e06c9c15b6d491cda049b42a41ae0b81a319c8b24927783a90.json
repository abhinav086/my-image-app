{"ast":null,"code":"var _jsxFileName = \"/Users/abhinav/Downloads/my-image-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Container, Box, Typography, Button, Snackbar, Alert } from \"@mui/material\";\nimport \"./App.css\"; // Import the custom CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [image, setImage] = useState(null);\n  const [images, setImages] = useState([]);\n  const [imageName, setImageName] = useState('');\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n\n  // Fetch images from backend when the component mounts\n  useEffect(() => {\n    axios.get(\"http://localhost:4000/api/images\").then(response => {\n      setImages(response.data.images || []); // Adjust based on actual response format\n    }).catch(error => {\n      console.error(\"Error fetching images:\", error);\n      setSnackbarMessage(\"Failed to fetch images.\");\n      setOpenSnackbar(true);\n    });\n  }, []);\n\n  // Handle image selection\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      setImage(reader.result);\n    };\n    if (file) {\n      reader.readAsDataURL(file); // Convert the image to base64 format\n      setImageName(file.name);\n    }\n  };\n\n  // Handle form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(image.split(',')[1]);\n    if (image && imageName) {\n      axios.post(\"http://localhost:4000/api/upload\", {\n        name: imageName,\n        base64: image.split(',')[1]\n        // Remove the data URL scheme\n      }).then(response => {\n        setSnackbarMessage(\"Image uploaded successfully!\");\n        setOpenSnackbar(true);\n        setImages([...images, response.data.image]); // Adjust based on actual response format\n        setImage(null); // Clear the selected image\n      }).catch(error => {\n        console.error(\"Error uploading image:\", error);\n        setSnackbarMessage(\"Failed to upload image.\");\n        setOpenSnackbar(true);\n      });\n    } else {\n      alert(\"Please select an image first.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      mt: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: \"upload-box\",\n      sx: {\n        textAlign: 'center',\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Image Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          component: \"label\",\n          children: [\"Choose Image\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            hidden: true,\n            onChange: handleImageChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          type: \"submit\",\n          sx: {\n            mt: 2\n          },\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), image && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 4,\n          mb: 4,\n          textAlign: 'center',\n          border: '1px solid #ddd',\n          borderRadius: '8px',\n          padding: '8px',\n          display: 'inline-block'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: imageName || \"Selected image preview\" // Descriptive alt text\n          ,\n          style: {\n            maxWidth: '100%',\n            height: 'auto',\n            boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.2)',\n            borderRadius: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            mt: 2\n          },\n          children: imageName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        sx: {\n          mt: 4\n        },\n        children: \"Uploaded Images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: 2,\n          justifyContent: 'center'\n        },\n        children: images.length > 0 ? images.map(img => /*#__PURE__*/_jsxDEV(Box, {\n          className: \"upload-image\",\n          sx: {\n            textAlign: 'center',\n            maxWidth: 200\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `data:image/jpeg;base64,${img.base64}`,\n            alt: `Uploaded image: ${img.name}` // Descriptive alt text\n            ,\n            style: {\n              width: '100%',\n              height: 'auto',\n              boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.2)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            align: \"center\",\n            children: img.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 33\n          }, this)]\n        }, img._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"No images uploaded yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: openSnackbar,\n      autoHideDuration: 6000,\n      onClose: () => setOpenSnackbar(false),\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: () => setOpenSnackbar(false),\n        severity: \"success\",\n        children: snackbarMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"9LpXg2Yvb36C7tQGCnRNcZE6wpw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","Box","Typography","Button","Snackbar","Alert","jsxDEV","_jsxDEV","App","_s","image","setImage","images","setImages","imageName","setImageName","openSnackbar","setOpenSnackbar","snackbarMessage","setSnackbarMessage","get","then","response","data","catch","error","console","handleImageChange","e","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","name","handleSubmit","preventDefault","log","split","post","base64","alert","maxWidth","sx","mt","children","className","textAlign","mb","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","component","type","hidden","onChange","color","border","borderRadius","padding","display","src","alt","style","height","boxShadow","flexWrap","gap","justifyContent","length","map","img","width","align","_id","open","autoHideDuration","onClose","severity","_c","$RefreshReg$"],"sources":["/Users/abhinav/Downloads/my-image-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Container, Box, Typography, Button, Snackbar, Alert } from \"@mui/material\";\r\nimport \"./App.css\"; // Import the custom CSS file\r\n\r\nconst App = () => {\r\n    const [image, setImage] = useState(null);\r\n    const [images, setImages] = useState([]);\r\n    const [imageName, setImageName] = useState('');\r\n    const [openSnackbar, setOpenSnackbar] = useState(false);\r\n    const [snackbarMessage, setSnackbarMessage] = useState('');\r\n\r\n    // Fetch images from backend when the component mounts\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:4000/api/images\")\r\n            .then((response) => {\r\n                setImages(response.data.images || []); // Adjust based on actual response format\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Error fetching images:\", error);\r\n                setSnackbarMessage(\"Failed to fetch images.\");\r\n                setOpenSnackbar(true);\r\n            });\r\n    }, []);\r\n\r\n    // Handle image selection\r\n    const handleImageChange = (e) => {\r\n        const file = e.target.files[0];\r\n        const reader = new FileReader();\r\n\r\n        reader.onloadend = () => {\r\n            setImage(reader.result);\r\n        };\r\n        \r\n        if (file) {\r\n            reader.readAsDataURL(file); // Convert the image to base64 format\r\n            setImageName(file.name);\r\n        }\r\n    };\r\n\r\n    // Handle form submission\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(image.split(',')[1]);\r\n\r\n        if (image && imageName) {\r\n            axios.post(\"http://localhost:4000/api/upload\", {\r\n                name: imageName,\r\n                base64: image.split(',')[1],\r\n                 // Remove the data URL scheme\r\n            })\r\n            .then((response) => {\r\n                setSnackbarMessage(\"Image uploaded successfully!\");\r\n                setOpenSnackbar(true);\r\n                setImages([...images, response.data.image]); // Adjust based on actual response format\r\n                setImage(null); // Clear the selected image\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Error uploading image:\", error);\r\n                setSnackbarMessage(\"Failed to upload image.\");\r\n                setOpenSnackbar(true);\r\n            });\r\n        } else {\r\n            alert(\"Please select an image first.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth=\"md\" sx={{ mt: 4 }}>\r\n            <Box className=\"upload-box\" sx={{ textAlign: 'center', mb: 4 }}>\r\n                <Typography variant=\"h4\" gutterBottom>\r\n                    Image Upload\r\n                </Typography>\r\n                <form onSubmit={handleSubmit}>\r\n                    <Button variant=\"contained\" component=\"label\">\r\n                        Choose Image\r\n                        <input type=\"file\" hidden onChange={handleImageChange} />\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        sx={{ mt: 2 }}\r\n                    >\r\n                        Upload\r\n                    </Button>\r\n                </form>\r\n\r\n                {/* Image Preview */}\r\n                {image && (\r\n                    <Box\r\n                        sx={{\r\n                            mt: 4,\r\n                            mb: 4,\r\n                            textAlign: 'center',\r\n                            border: '1px solid #ddd',\r\n                            borderRadius: '8px',\r\n                            padding: '8px',\r\n                            display: 'inline-block'\r\n                        }}\r\n                    >\r\n                        <img\r\n                            src={image}\r\n                            alt={imageName || \"Selected image preview\"} // Descriptive alt text\r\n                            style={{\r\n                                maxWidth: '100%',\r\n                                height: 'auto',\r\n                                boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.2)',\r\n                                borderRadius: '8px'\r\n                            }}\r\n                        />\r\n                        <Typography variant=\"body2\" sx={{ mt: 2 }}>\r\n                            {imageName}\r\n                        </Typography>\r\n                    </Box>\r\n                )}\r\n\r\n                <Typography variant=\"h6\" gutterBottom sx={{ mt: 4 }}>\r\n                    Uploaded Images\r\n                </Typography>\r\n                <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2, justifyContent: 'center' }}>\r\n                    {images.length > 0 ? (\r\n                        images.map((img) => (\r\n                            <Box\r\n                                key={img._id}\r\n                                className=\"upload-image\"\r\n                                sx={{ textAlign: 'center', maxWidth: 200 }}\r\n                            >\r\n                                <img\r\n                                    src={`data:image/jpeg;base64,${img.base64}`}\r\n                                    alt={`Uploaded image: ${img.name}`} // Descriptive alt text\r\n                                    style={{ width: '100%', height: 'auto', boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.2)' }}\r\n                                />\r\n                                <Typography variant=\"body2\" align=\"center\">\r\n                                    {img.name}\r\n                                </Typography>\r\n                            </Box>\r\n                        ))\r\n                    ) : (\r\n                        <Typography>No images uploaded yet.</Typography>\r\n                    )}\r\n                </Box>\r\n            </Box>\r\n\r\n            <Snackbar\r\n                open={openSnackbar}\r\n                autoHideDuration={6000}\r\n                onClose={() => setOpenSnackbar(false)}\r\n            >\r\n                <Alert onClose={() => setOpenSnackbar(false)} severity=\"success\">\r\n                    {snackbarMessage}\r\n                </Alert>\r\n            </Snackbar>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}